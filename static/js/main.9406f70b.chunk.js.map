{"version":3,"sources":["img/squares-logo-mock.png","getWeb3.js","Web3Context.js","components/Balance/index.js","components/Header/index.js","pages/Home/index.js","pages/Faucet/index.js","components/Board/index.js","components/SquareClickModal/index.js","components/Game/index.js","pages/GamePage/index.js","components/Events/index.js","pages/GameList/index.js","components/Form/index.js","pages/CreateGame/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getWeb3","Promise","resolve","reject","window","addEventListener","a","async","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Context","React","createContext","MyWeb3Provider","props","state","loaded","gameList","this","setState","gameEvent","games","eth","getAccounts","accounts","net","getId","networkId","deployedNetwork","TokenContract","networks","tokenContract","Contract","abi","address","fbdeployedNetwork","FootballContract","squaresContract","faucetdNetwork","FaucetContract","faucetContract","events","GameCreated","fromBlock","error","event","returnValues","gameId","g","owner","token","metadata","setLoaded","alert","Provider","value","children","Component","MyWeb3Consumer","Consumer","ReadBalance","getBalance","methods","balanceOf","selectedAddress","call","b","balance","className","Balance","Header","href","src","logo","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Home","Tapper","submitTransaction","tap","send","from","approve","_address","onClick","Faucet","Square","SquareLabel","Board","componentDidUpdate","columnLabels","rowLabels","squareGrid","length","createSquareGrid","arr","push","forEach","l","rowlabelI","i","n","uniqueI","key","toString","addr","squares","test","slice","map","v","idx","renderSquare","Modal","showHideClassName","show","name","handleClose","Game","footballContract","pickSquareValue","gid","clickedSquare","showModal","hideModal","checkBalance","getGameColumns","cols","getGameRows","rows","data","gameData","getGameSquareValues","columns","sqVals","GameMeta","x","contract","handleClick","meta","erc20RewardToken","squarePrice","totalPot","Dapp","EventList","listItems","e","Events","CreateForm","handleChange","bind","handleSubmit","target","preventDefault","onSubmit","onChange","CreateGame","Form","App","path","GamePage","GameList","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9406f70b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/squares-logo-mock.460f3b1a.png\";","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from \"react\";\nimport getWeb3 from \"./getWeb3\";\nimport TokenContract from \"./contracts/rinkeby/FootballToken.json\";\nimport FootballContract from \"./contracts/rinkeby/Football.json\";\nimport FaucetContract from \"./contracts/rinkeby/Faucet.json\";\n\nconst Context = React.createContext();\n\n\nexport class MyWeb3Provider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      gameList: []\n    }\n  }\n  \n  setLoaded() {\n    this.setState({\n      loaded: true\n    })\n  }\n\n  addGameToList(gameEvent) {\n    //let game = event.returned\n    this.setState({\n      games: gameEvent\n    })\n  }\n\n\n  async componentDidMount() {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n\n      console.log(\"networkId\", typeof networkId, networkId)\n      const deployedNetwork = TokenContract.networks['4'];\n      const tokenContract = new web3.eth.Contract(\n        TokenContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const fbdeployedNetwork = FootballContract.networks['4'];\n      const squaresContract = new web3.eth.Contract(\n        FootballContract.abi,\n        fbdeployedNetwork && fbdeployedNetwork.address,\n      );\n\n      const faucetdNetwork = FaucetContract.networks['4'];\n      const faucetContract = new web3.eth.Contract(\n        FaucetContract.abi,\n        faucetdNetwork && faucetdNetwork.address,\n      );\n\n\n      squaresContract.events.GameCreated({\n        fromBlock: 0\n      }, (error, event) => {\n        console.log(event)\n        console.log(this.state)\n\n        let {gameId, owner, token, metadata} = event.returnValues\n        let g = {gameId, owner, token, metadata}\n        console.log(gameId)\n        \n        this.setState({ gameList: [...this.state.gameList, g] }) //simple value\n\n      })\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      console.log(\"set ctx state\", this.state.loaded)\n      this.setState({ web3, accounts, squaresContract, tokenContract, faucetContract }, this.setLoaded);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n\n  }\n\n\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n\n}\n\nexport const MyWeb3Consumer = Context.Consumer;\n\nexport default Context","import React, { Component } from \"react\";\nimport { MyWeb3Consumer } from \"../../Web3Context\"\n\nclass ReadBalance extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        balance: -1\n    }\n    this.getBalance()\n  }\n\n  getBalance = async () => {\n    console.log(\"tap\")\n    let b = await this.props.tokenContract.methods.balanceOf(window.ethereum.selectedAddress).call();\n    this.setState({balance: b})\n  };\n\n  render() {\n    if (this.state.balance===-1) {\n        return (<div></div>)\n    }\n    return (\n        <div className=\"balance-div\">balance: {this.state.balance}</div>\n    );\n  }\n}\n\n\nconst Balance = (props) => (\n  <MyWeb3Consumer>\n    {({ loaded, tokenContract }) => {\n      if (!loaded) {\n        return (<div></div>)\n      }\n      return (\n       \n          <ReadBalance tokenContract={tokenContract} />\n\n      )\n    }}\n  </MyWeb3Consumer>\n);\n\nexport default Balance;","import React from 'react';\nimport { Link } from \"@reach/router\"\n\nimport Balance from \"../Balance\"\n\nimport logo from '../../img/squares-logo-mock.png'\n\nfunction Header() {\n  return (\n    \n    <div>\n      <header>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"/\"><img className=\"nav-logo\" src={logo} alt={\"logo\"}/> </a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n\n            <div className=\"navbar-nav\">\n              <Balance />\n              <Link className=\"nav-item nav-link\" to=\"/create\"><button className=\"btn-primary\">Create A Game</button></Link>\n              <Link className=\"nav-item nav-link\" to=\"/list\"><button className=\"btn-tertiary\">Join A Game</button></Link>\n              <Link className=\"nav-item nav-link\" to=\"/faucet\"><button className=\"btn-tertiary\">Faucet</button></Link>\n\n            </div>\n          </div>\n        </nav>\n      </header>\n    </div>\n\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Link } from \"@reach/router\"\nclass Home extends Component {\n\n    render() {\n        return (\n\n          <div>\n            <section className=\"component__hero\">\n              <div className=\"container-fluid component__hero--container\">\n                <div className=\"row component__hero--row\">\n                  <div className=\"col-lg-7 col-12 component__hero--col col-left\">\n                    <div className=\"hero-overlay\">\n                      <div className=\"hero-copy-container\">\n                        <h1 className=\"hero-header\">Welcome To Squares!</h1>\n                        <hr className=\"text-decorate\"/>\n                        <p className=\"hero-subcopy\">The football squares dapp. Still a work in progress. Check out the contracts at https://github.com/joeb000/eth-football-squares</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-lg-5 col-12 component__hero--col col-right\">\n                    <div className=\"hero-sidebar-copy-container\">\n                      <h2 className=\"hero-sidebar-header\">Start Playing!</h2>\n                      <hr className=\"text-decorate-sidebar\"/>\n                      <div className=\"hero-sidebar-button-container\">\n                        <Link to=\"/create\" className=\"btn-primary\">Create A Game</Link>\n                        <Link to=\"/list\" className=\"btn-tertiary\">Join A Game</Link>\n                      </div>\n                    </div>\n                    \n                  </div>\n                </div>\n              </div>\n            </section>\n            {/* <Events/> */}\n          </div>\n\n        );\n      }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport { MyWeb3Consumer } from \"../../Web3Context\"\n\nclass Tapper extends Component {\n\n  submitTransaction = async () => {\n    this.props.faucetContract.methods.tap().send({ from: window.ethereum.selectedAddress });\n    this.props.tokenContract.methods.approve(this.props.squaresContract._address, 10000000).send({ from: window.ethereum.selectedAddress });\n  };\n\n  render() {\n    return (\n      <div className=\"tap-button-div\">\n        <button onClick={() => this.submitTransaction()}>\n          TAP IT\n        </button>\n      </div>\n    );\n  }\n}\n\n\nconst Faucet = (props) => (\n  <MyWeb3Consumer>\n    {({ loaded, faucetContract, tokenContract, squaresContract }) => {\n      if (!loaded) {\n        return (<div>Loading contracts from Context</div>)\n      }\n      return (\n        <div className=\"faucet-page\">\n          <h1>Football Token Faucet</h1>\n          <div>Welcome to the \"Football Token\" Faucet, Football token is an ERC20 token which is the default token for paying for squares. Tap this faucet to get 1000 football token.</div>\n          <Tapper faucetContract={faucetContract} tokenContract={tokenContract} squaresContract={squaresContract}/>\n        </div>\n      )\n    }}\n  </MyWeb3Consumer>\n);\n\nexport default Faucet;","import React from 'react';\n// import \"./index.css\"\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nfunction SquareLabel(props) {\n  return (\n    <div className=\"\">\n      <button className=\"square-label\">\n        {props.value}\n      </button>\n    </div>\n  );\n}\n\nexport default class Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squareGrid: []\n    };\n  }\n  componentDidUpdate = async () => {\n    if (this.props.columnLabels && this.props.rowLabels && this.state.squareGrid.length === 0) {\n      this.createSquareGrid()\n    }\n  }\n\n  createSquareGrid() {\n    let arr = []\n    arr.push([\"X\", \"label\"])\n    this.props.columnLabels.forEach(l => {\n      arr.push([l, \"label\"])\n    });\n    let rowlabelI = 0\n    for (let i = 0; i < 100; i++) {\n      if (i % 10 === 0) {\n        arr.push([this.props.rowLabels[rowlabelI], \"label\"])\n        rowlabelI++;\n      }\n      arr.push([i, \"normal\"])\n    }\n    this.setState({ squareGrid: arr })\n  }\n\n  renderSquare(n, type, uniqueI) {\n\n    if (type === \"label\") {\n      return (\n        <SquareLabel\n          key={uniqueI.toString()}\n          value={n}\n        />\n      );\n    }\n\n    //get the value in the Football contract\n    //let x = 10 * c + r\n    let addr = this.props.squares[n]\n\n    if (addr && /^0x[a-fA-F0-9]{40}$/.test(addr)) {\n      addr = addr.slice(0, 4) + \"..\" + addr.slice(38)\n    }\n    return (\n      <Square\n        key={uniqueI.toString()}\n        value={addr}\n        onClick={() => this.props.onClick(n)}\n      />\n    );\n  }\n\n\n  render() {\n    if (this.state.squareGrid.length === 0) {\n      return (\n        <div className=\"square-grid\">Loading the board, wait a few seconds...</div>\n      )\n    }\n    return (\n      <div className=\"square-grid\">\n        {this.state.squareGrid.map((v, idx) => {\n          if (v) {\n            return (\n              this.renderSquare(v[0], v[1], idx)\n            )\n          } else return null\n\n        })}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport \"./index.css\"\n\n\n\n\nexport default class Modal extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n\n    };\n\n  }\n\n\n\n  render() {\n    const showHideClassName = this.props.show ? 'modal display-block' : 'modal display-none';\n\n    return (\n      <div className={showHideClassName}>\n      <section className={this.props.name}>\n        {this.props.children}\n        <button onClick={this.props.handleClose}>\n          Cancel\n        </button>\n      </section>\n    </div>\n    );\n  }\n}\n","import React from 'react';\nimport Board from '../Board'\nimport Modal from '../SquareClickModal'\nimport \"./index.css\"\n\nexport default class Game extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      gameData: null,\n      sqVals: [],\n      show: false\n    };\n    this.checkBalance()\n  }\n\n  handleClick(i) {\n    console.log(i)\n    this.showModal(i)\n  }\n\n  submitTransaction = async () => {\n    this.props.footballContract.methods.pickSquareValue(this.props.gid, this.state.clickedSquare).send({ from: window.ethereum.selectedAddress });\n  };\n\n  showModal = (i) => {\n    console.log(\"showing modal\")\n    this.setState({ show: true, clickedSquare: i });\n  };\n\n  hideModal = () => {\n    this.setState({ show: false });\n  };\n\n  checkBalance = async () => {\n    //const response = await this.contextType.token.methods.balanceOf(this.props.accounts[0]).call();\n    const cols = await this.props.footballContract.methods.getGameColumns(this.props.gid).call();\n    //console.log(cols)\n    const rows = await this.props.footballContract.methods.getGameRows(this.props.gid).call();\n    //console.log(rows)\n\n    const data = await this.props.footballContract.methods.games(this.props.gid).call();\n    console.log(\"data\", data)\n\n\n    this.setState({\n      gameData: data\n    })\n\n    const a = await this.props.footballContract.methods.getGameSquareValues(this.props.gid).call();\n    this.setState({\n      columns: cols,\n      rows,\n      sqVals:a\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"game\">\n        <GameMeta gameData={this.state.gameData} />\n        <div className=\"game-board\">\n          <Modal name=\"square-modal\" show={this.state.show} handleClose={this.hideModal}>\n            <span>LOL</span>\n            <button onClick={x => this.submitTransaction(x)}>\n              Submit\n            </button>\n          </Modal>\n          <Board\n            contract={this.props.footballContract}\n            gid={this.props.gid}\n            columnLabels={this.state.columns}\n            rowLabels={this.state.rows}\n            squares={this.state.sqVals}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction GameMeta(props) {\n  if (props.gameData) {\n    return (\n      <div className=\"game-meta\">\n        <label>Name (meta):</label>{props.gameData.meta}\n        <br></br>\n        <label>Owner:</label>{props.gameData.owner}\n        <br></br>\n        <label>Token:</label>{props.gameData.erc20RewardToken}\n        <br></br>\n        <label>Price per square:</label>{props.gameData.squarePrice}\n        <br></br>\n        <label>Total tokens in pot:</label>{props.gameData.totalPot}\n      </div>\n    );\n  }\n  return (\n    <div className=\"game-meta\">\n      Loading meta properties...\n          </div>\n  );\n}\n","import Game from '../../components/Game';\nimport React from \"react\";\nimport { MyWeb3Consumer } from '../../Web3Context';\n\nconst Dapp = (props) => (\n  <MyWeb3Consumer>\n    {({ loaded, tokenContract, squaresContract }) => {\n      if (!loaded) {\n        return (<div>Loading contracts from Context</div>)\n      }\n      return (\n        <div className=\"App\">\n          <h1>Football Squares Dapp context!</h1>\n          <div>\n            <Game token={tokenContract} footballContract={squaresContract} gid={props.gid} />\n          </div>\n        </div>\n      )\n    }}\n  </MyWeb3Consumer>\n);\n\nexport default Dapp;\n","import React from 'react';\nimport { Link } from \"@reach/router\"\nimport { MyWeb3Consumer } from '../../Web3Context';\n\nconst Events = (props) => (\n  <MyWeb3Consumer>\n    {({ gameList }) => {\n      return (\n        <div className=\"events-container\">\n          <EventList events={gameList} />\n        </div>\n      )\n    }}\n  </MyWeb3Consumer>\n);\n\n\n\nfunction EventList(props) {\n  const events = props.events;\n\n  const listItems = events.map((e) =>\n    <li key={e.gameId} ><Link to={\"/game/\" + e.gameId}>{e.metadata}</Link></li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\n\nexport default Events;\n","import Events from '../../components/Events';\nimport React from \"react\";\nimport { MyWeb3Consumer } from '../../Web3Context';\n\nconst Dapp = (props) => (\n  <MyWeb3Consumer>\n    {({ loaded, tokenContract, squaresContract }) => {\n      if (!loaded) {\n        return (<div>Loading contracts from Context</div>)\n      }\n      return (\n        <div className=\"App\">\n          <h1>Football Squares Active Games</h1>\n          <div>\n            <Events />\n          </div>\n        </div>\n      )\n    }}\n  </MyWeb3Consumer>\n);\n\nexport default Dapp;\n","import React, { Component } from \"react\";\n\n\nclass CreateForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: '' };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n        console.log(event.target.value)\n    }\n\n    handleSubmit(event) {\n        console.log('A name was submitted: ' + this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Home Team:\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                </label>\n                <br></br>\n                <label>\n                    Away Team:\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                </label>\n                <br></br>\n\n                <label>\n                    Game Date Time:\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                </label>\n                <br></br>\n\n                <label>\n                    Reward Token:\n                <select name=\"cars\">\n                    <option value=\"volvo\">Volvo</option>\n                    <option value=\"saab\">Saab</option>\n                    <option value=\"fiat\">Fiat</option>\n                    <option value=\"\">Other...</option>\n                </select><span>&nbsp;&nbsp;&nbsp; OR &nbsp;&nbsp;&nbsp;</span> \n                 <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                 </label>\n                <br></br>\n                <label>\n                Square Price:\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                </label>\n                <br></br>\n                <input type=\"submit\" value=\"Submit\" /> \n            </form>\n        );\n    }\n}\nexport default CreateForm;","import React, { Component } from \"react\";\nimport Form from \"../../components/Form\"\nclass CreateGame extends Component {\n\n  render() {\n    return (\n      <div className=\"create-page\">\n        <h1>Create New Game</h1>\n        <div>Fill out the form below to create a new game</div>\n        <Form />\n      </div>\n    );\n  }\n}\n\nexport default CreateGame;","import React from 'react';\nimport Header from './components/Header';\n\nimport './App.css';\nimport { Router } from \"@reach/router\"\nimport Home from \"./pages/Home\"\nimport Faucet from \"./pages/Faucet\"\nimport GamePage from \"./pages/GamePage\"\nimport GameList from \"./pages/GameList\"\nimport CreateGame from \"./pages/CreateGame\"\nimport { MyWeb3Provider } from \"./Web3Context\"\nfunction App() {\n  return (\n    <div className=\"app-class\">\n      <MyWeb3Provider>\n        <Header />\n        <Router>\n          <Home path=\"/\" />\n          <GamePage path=\"game/:gid\" />\n          <CreateGame path=\"/create\" />\n          <Faucet path=\"/faucet\" />\n          <GameList path=\"/list\" />\n\n        </Router>\n      </MyWeb3Provider>\n    </div>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/style.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}